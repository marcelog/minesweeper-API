openapi: 3.0.0
info:
  title: Minesweeper API
  description: Deviget code challenge
  version: 0.0.1

servers:
  - url: http://minesweeper.com/v1
    description: Main server

paths:
  /ping:
    get:
      summary: Just pings the server for availability
      description: Ping & Pong
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: PONG
  /users:
    post:
      summary: Creates a new user
      description: If you're new to the system, start here
      responses:
        '201':
          description: A JSON object describing the new user properties
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /games:
    post:
      summary: Creates a new game
      description: With your user, you can create new games
      security:
        - ApiKeyAuth: []
      requestBody:
        description: Game parameters
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameCreationDto'
      responses:
        '401':
          description: Authorization information is missing or invalid.

        '400':
          description: User error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '201':
          description: A JSON object describing the new game properties
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
  /games/{game_id}/cells/{cell_id}/flag:
    post:
      summary: Flags a cell as having a mine
      description: Just for your convenience
      security:
        - ApiKeyAuth: []
      responses:
        '401':
          description: Authorization information is missing or invalid.

        '400':
          description: User error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '200':
          description: Cell was correctly unflagged
      parameters:
        - in: path
          name: game_id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The game ID
        - in: path
          name: cell_id
          required: true
          schema:
            type: integer
            minimum: 0
          description: The cell ID

    delete:
      summary: Removes the flag from a cell
      description: Just for your convenience
      security:
        - ApiKeyAuth: []
      responses:
        '401':
          description: Authorization information is missing or invalid.

        '400':
          description: User error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '200':
          description: Cell was correctly unflagged
      parameters:
        - in: path
          name: game_id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The game ID
        - in: path
          name: cell_id
          required: true
          schema:
            type: integer
            minimum: 0
          description: The cell ID

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    GameCreationDto:
      type: object
      properties:
        width:
          type: integer
          description: Board width
          minimum: 8
          maximum: 64
        height:
          type: integer
          description: Board height
          minimum: 8
          maximum: 64
        mines:
          type: integer
          description: How many mines to setup in the board. Limited to 50% of the board.
          minimum: 1
      required:
        - width
        - height
        - mines
    Error:
      type: object
      properties:
        message:
          type: string
          description: The error message
      required:
        - message
    User:
      type: object
      properties:
        id:
          type: integer
          description: The user ID.
        api_key:
          type: string
          description: The api key for this user.
      required:
        - id
        - api_key
    Game:
      type: object
      properties:
        id:
          type: integer
          description: The game ID.
        width:
          type: integer
          description: Board width
          minimum: 8
          maximum: 64
        height:
          type: integer
          description: Board height
          minimum: 8
          maximum: 64
        mines:
          type: integer
          description: How many mines to setup in the board. Limited to 50% of the board.
          minimum: 1
        state:
          type: string
          description: Game state
          enum:
            - started
            - won
            - lost
        board:
          type: array
          description: The board
          items:
            $ref: '#/components/schemas/BoardCell'
      required:
        - id
        - width
        - height
        - mines
        - state
        - board
    BoardCell:
      type: integer
      enum:
        - '#/components/schemas/CellUnvisited'
        - '#/components/schemas/CellAdjMines0'
        - '#/components/schemas/CellAdjMines1'
        - '#/components/schemas/CellAdjMines2'
        - '#/components/schemas/CellAdjMines3'
        - '#/components/schemas/CellAdjMines4'
        - '#/components/schemas/CellAdjMines5'
        - '#/components/schemas/CellAdjMines6'
        - '#/components/schemas/CellAdjMines7'
        - '#/components/schemas/CellAdjMines8'
        - '#/components/schemas/CellFlagged'
    CellUnvisited:
      type: integer
      description: A cell that hasn't been visited or flagged yet
      minimum: 0
      maximum: 0
    CellAdjMines0:
      type: integer
      description: A cell with 0 adjacent mines (i.e visited)
      minimum: 1
      maximum: 1
    CellAdjMines1:
      type: integer
      description: A cell with 1 adjacent mine
      minimum: 2
      maximum: 2
    CellAdjMines2:
      type: integer
      description: A cell with 2 adjacent mines
      minimum: 3
      maximum: 3
    CellAdjMines3:
      type: integer
      description: A cell with 3 adjacent mines
      minimum: 4
      maximum: 4
    CellAdjMines4:
      type: integer
      description: A cell with 4 adjacent mines
      minimum: 5
      maximum: 5
    CellAdjMines5:
      type: integer
      description: A cell with 5 adjacent mines
      minimum: 6
      maximum: 6
    CellAdjMines6:
      type: integer
      description: A cell with 6 adjacent mines
      minimum: 7
      maximum: 7
    CellAdjMines7:
      type: integer
      description: A cell with 7 adjacent mines
      minimum: 8
      maximum: 8
    CellAdjMines8:
      type: integer
      description: A cell with 8 adjacent mines
      minimum: 9
      maximum: 9
    CellFlagged:
      type: integer
      description: A cell flagged by the user
      minimum: 10
      maximum: 10
